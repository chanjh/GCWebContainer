{"version":3,"file":"jsbridge.js","mappings":"oDACA,MACE,e,yCCkBF,UAnBe,CACbA,WAAY,SACZC,OAAQ,KACRC,SAAU,CACRC,KAAM,CACJC,YAAa,CAAC,SACdC,KAAM,CAAC,eAETC,QAAS,CACPC,OAAQ,CACNC,SAAU,CACRC,IAAK,CAAC,cAGVJ,KAAM,CAAC,kB,8BCfb,aACA,oCACE,KAAAK,UAA2C,GAqB7C,OAnBE,sBAAAC,UAAA,SAAUC,EAAeC,GACf,IAAAH,EAAcI,KAAI,UACtBC,EAAoBL,EAAUE,GAC7BG,IACHA,EAAoB,IAEtBA,EAAkBC,KAAKH,GACvBH,EAAUE,GAASG,GAGrB,sBAAAE,QAAA,SAAQL,G,IAAe,wDACb,IAAAF,EAAcI,KAAI,UACpBC,EAAoBL,EAAUE,GACpC,GAAIG,EACF,IAAuB,UAAAA,EAAA,eAAmB,CAArC,IAAMG,EAAQ,KACjBA,EAAQ,aAAIC,KAIpB,YAtBA,G,aAuBA,aAAS,cAAe,IAAIC,I,4BCvB5B,MACE,e,2CCFF,aAEA,OACA,SAGA,mBAAwBC,SAASC,GAC/B,IAAIC,EAAcD,EACbA,IACHC,EAAcC,EAAqB,SAE7B,IAAAvB,EAAWsB,EAAW,OAE7BE,OAAe,UAAGxB,IAAY,IAAI,UAClCwB,OAAe,UAAGxB,IAAUyB,OAAS,IAAI,UAE1CD,OAAOE,GAAGC,QAAUL,EAEpB,EAAQ,O,4BClBV,mBAAwBM,SAASC,EAAcjB,GACrC,IAAAZ,EAAWwB,OAAOE,GAAGC,QAAO,OACtBH,OAAexB,GAAQyB,OAChCI,GAAQjB,KCFXkB,EAA2B,GAG/B,SAASC,oBAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,qBAG/CK,EAAOD,QCrBf,yBAAO,QACP,yBAAO,S","sources":["webpack://@pandola/bridge/./src/bridge.ts","webpack://@pandola/bridge/./src/config.default.ts","webpack://@pandola/bridge/./src/event_center.ts","webpack://@pandola/bridge/./src/global.ts","webpack://@pandola/bridge/./src/launcher.ts","webpack://@pandola/bridge/./src/register.ts","webpack://@pandola/bridge/webpack/bootstrap","webpack://@pandola/bridge/./src/index.ts"],"sourcesContent":["\nexport default class Bridge {\n  constructor() { }\n}\n","\nconst config = {\n  bridgeName: 'invoke',\n  global: 'gc',\n  services: {\n    util: {\n      contextMenu: ['clear'],\n      test: ['testMethod']\n    },\n    runtime: {\n      system: {\n        lifecyle: {\n          app: ['willopen']\n        }\n      },\n      test: ['testMethod']\n    }\n  }\n};\n\nexport default config;","import register from './register';\nexport default class EventCenter {\n  listeners: { [key: string]: Function[] } = {};\n\n  subscribe(event: string, fn: Function) {\n    const { listeners } = this;\n    let listenersForEvent = listeners[event]\n    if (!listenersForEvent) {\n      listenersForEvent = []\n    }\n    listenersForEvent.push(fn);\n    listeners[event] = listenersForEvent;\n  }\n\n  publish(event: string, ...params: any[]) {\n    const { listeners } = this;\n    const listenersForEvent = listeners[event];\n    if (listenersForEvent) {\n      for (const listener of listenersForEvent) {\n        listener(...params);\n      }\n    }\n  }\n}\nregister('eventCenter', new EventCenter());","// instance injecting on `window`\nexport default class Global {\n  constructor() { }\n  _config: {bridgeName: string, global: string, services: {}};\n  bridge: any;\n}\n","import Global from './global'\nimport loadAllServices from './service_loader';\nimport Bridge from './bridge'\nimport * as defaultConfig from \"./config.default\";\nimport { jsbridge } from './invoker';\n\nexport default function launcher(config?: any) {\n  let finalConfig = config;\n  if (!config) {\n    finalConfig = defaultConfig.default;\n  }\n  const { global } = finalConfig;\n  // 0. register gc on window\n  (window as any)[`${global}`] = new Global();\n  (window as any)[`${global}`].bridge = new Bridge();\n  // (window as any)[`${global}`].bridge.jsbridge = jsbridge;\n  window.gc._config = finalConfig;\n  // 1. add event center\n  require('./event_center');\n  // 1. load all services\n  // loadAllServices();\n}","export default function register(name: string, fn: any) {\n  const { global } = window.gc._config;\n  const host = (window as any)[global].bridge;\n  host[name] = fn;\n}\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import launcher from \"./launcher\";\nimport register from \"./register\";\n\nexport { launcher, register };"],"names":["bridgeName","global","services","util","contextMenu","test","runtime","system","lifecyle","app","listeners","subscribe","event","fn","this","listenersForEvent","push","publish","listener","params","EventCenter","launcher","config","finalConfig","defaultConfig","window","bridge","gc","_config","register","name","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__"],"sourceRoot":""}